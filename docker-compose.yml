networks:
  toubeelib.net:
    driver: bridge

services:

  # service api.toubeelib : api pour la prise de rdv
  api.toubeelib:
    build:
      context: build
      dockerfile: 8.3-cli.Dockerfile
    env_file: ./toubeelib.env
    ports:
      - '6080:80'
    volumes:
      - ./app:/var/php
    working_dir: /var/php
    networks:
      - toubeelib.net
    depends_on:
      - toubeelib.db
    command: php -S 0.0.0.0:80 -t /var/php/public

  # Gateway pour gérer l'authentification et les autres API
  gateway.toubeelib:
    build:
      context: build
      dockerfile: 8.3-cli.Dockerfile
    env_file: ./toubeelib.env
    ports:
      - '6081:80'
    volumes:
      - ./gateway:/var/php
    working_dir: /var/php
    networks:
      - toubeelib.net
    depends_on:
      - toubeelib.db
    command: php -S 0.0.0.0:80 -t /var/php/public

  # Service api.praticien : api pour les praticiens
  api.praticien:
    build:
      context: build
      dockerfile: 8.3-cli.Dockerfile
    env_file: ./toubeelib.env
    ports:
      - '6082:80'
    volumes:
      - ./praticiens:/var/php
    working_dir: /var/php
    networks:
      - toubeelib.net
    depends_on:
      - praticien.db
    command: php -S 0.0.0.0:80 -t /var/php/public
    # Service api.auth : service dédié à l'authentification
  api.auth:
    build:
      context: build # Le dossier contenant ton microservice auth
      dockerfile: 8.3-cli.Dockerfile
    env_file: ./toubeelib.env
    ports:
      - '6084:80' # Port d'exposition du service auth
    volumes:
      - ./auth:/var/php
    working_dir: /var/php
    networks:
      - toubeelib.net
    depends_on:
      - users.db
    command: >
      sh -c " for i in {1..10}; do
        echo 'Waiting for database... $i';
        sleep 1;
      done; php ./init-users-script.php && echo 'Script exécuté avec succès'; php -S 0.0.0.0:80 -t /var/php/public"

  # Database pour toubeelib (api)
  toubeelib.db:
    image: 'postgres:latest'
    env_file: ./toubeelibdb.env
    ports:
      - '5431:5432'
    networks:
      - toubeelib.net
    volumes:
      - ./app/sql:/var/sql
      - ./init-multiple-db.sh:/docker-entrypoint-initdb.d/init-multiple-db.sh

  # Database pour praticiens
  praticien.db:
    image: 'postgres:latest'
    env_file: ./toubeelibdb.env
    ports:
      - '5432:5432'
    networks:
      - toubeelib.net
    volumes:
      - ./praticiens/sql:/var/sql
      - ./init-praticien-db.sh:/docker-entrypoint-initdb.d/init-multiple-db.sh

  # Database pour les utilisateurs
  users.db:
    image: 'postgres:latest'
    env_file: ./toubeelibdb.env
    ports:
      - '5433:5432'
    networks:
      - toubeelib.net
    volumes:
      - ./users/sql:/var/sql
      - ./init-users-db.sh:/docker-entrypoint-initdb.d/init-multiple-db.sh

  adminer:
    image: adminer
    ports:
      - '8080:8080'
    networks:
      - toubeelib.net
